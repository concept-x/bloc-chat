

-a "stack trace" is all the calls that led to the error, line-by-line. It's 
 on the left-hand side, usually in red (when error), and looks like this:
  domElement.Node.call
  window.Calendar.getEventsByDate
  jQuery.event.dispatch

 Error lines are on the right-hand side and looks like this:
  filename.filetype.number
  Rooms.js.1
  index.html.35

******
Rooms.js

(function() {
    function Rooms($rootScope, Fixtures) {
         var Rooms = {}; //wtf goes here and inside?

         /*
         * @desc currentAlbum from Fixtures
         * @type {Object}???
         */
         var currentAlbum = Fixtures.getAlbum();
       }

       angular
           .module('blocChatEe')
           .factory('Rooms', ['$rootScope', 'Rooms', Rooms]);//'factory' is a recipe...???
       })();

************

{{Room.rooms}} ...??? Now, where did {{this notation}} go? 


Jams--
app/assets, scripts, styles, templates, index.html
 ..scripts/controllers, directives, filters, services, app.js
  ...controllers/AlbumCtrl.js, CollectionCtrl.js, etc.

 ..scripts/directives/seekBar.js

 ..scripts/services/Fixtures.js, SongPlayer.js
  *may not need filters*
 
 ..templates/directives, album.html, collection.html, landing.html, player_bar.html
  ...directives/seek_bar.html

***********
Chat--

app/scripts, styles, templates, index.html
 ..scripts/controllers, directives, services, app.js
  ...controllers/HomeCtrl.js

 ..scripts/directives/NOTHING HERE

 ..scripts/services/Room.js

 ..templates/home.html

****************

ckpoint 6 send messages

first: 'send' method (in msgs.js; see assignment)

4 props on message obj: msg content, username, roomId, timestamp

msg content
1. create alias inside homectrl that refers to method in messages.js to push/send
  messages to firebase

2. Create message input field in home.html 
3. Capture msg input text w/homectrl to pass to messages.js
4. From messages.js, push to firebase

username
--pull from cookie

roomId
--this.currentRoom already exists; use it

timestamp
--generate inside sendMessage method we're creating to do all this.
date.now = built-in JS method; mock.TzDate = angular method (don't use), 
or google 'firebase timestamp'

second: create controller method for this via ng-click or ng-submit in homectrl
  to hand off to messages.js
third: add 'send' method to Messages.js to send to firebase

C recommends build input field and send button, put an alert on the send
 to prove the button works...next, make alert show input text to prove 
 input is captured and controller and template are talking to each other
-------------

fix cp 5: username displayed on the top of page only when page refreshes, not 
  as modal disappears. 

